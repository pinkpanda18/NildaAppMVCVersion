// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Nilda.EntityFramework;

namespace Nilda.EntityFrameworkCore.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20210725091436_UpdateCountryTableWithIsDefaultColumn")]
    partial class UpdateCountryTableWithIsDefaultColumn
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.8")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Nilda.EntityFrameworkCore.Entities.Barangay", b =>
                {
                    b.Property<int>("BarangayId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DistrictOrTownId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.HasKey("BarangayId");

                    b.HasIndex("DistrictOrTownId");

                    b.ToTable("Barangays");
                });

            modelBuilder.Entity("Nilda.EntityFrameworkCore.Entities.City", b =>
                {
                    b.Property<int>("CityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CountryRegionId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.HasKey("CityId");

                    b.HasIndex("CountryRegionId");

                    b.ToTable("Cities");
                });

            modelBuilder.Entity("Nilda.EntityFrameworkCore.Entities.Country", b =>
                {
                    b.Property<int>("CountryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CountryCode")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<bool>("isActive")
                        .HasColumnType("bit");

                    b.Property<bool>("isDefault")
                        .HasColumnType("bit");

                    b.HasKey("CountryId");

                    b.ToTable("Countries");
                });

            modelBuilder.Entity("Nilda.EntityFrameworkCore.Entities.CountryRegion", b =>
                {
                    b.Property<int>("CountryRegionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.HasKey("CountryRegionId");

                    b.HasIndex("CountryId");

                    b.ToTable("CountryRegions");
                });

            modelBuilder.Entity("Nilda.EntityFrameworkCore.Entities.DistrictOrTown", b =>
                {
                    b.Property<int>("DistrictOrTownId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CityId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.HasKey("DistrictOrTownId");

                    b.HasIndex("CityId");

                    b.ToTable("DistrictOrTowns");
                });

            modelBuilder.Entity("Nilda.EntityFrameworkCore.Entities.Barangay", b =>
                {
                    b.HasOne("Nilda.EntityFrameworkCore.Entities.DistrictOrTown", "DistrictOrTown")
                        .WithMany("Barangays")
                        .HasForeignKey("DistrictOrTownId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DistrictOrTown");
                });

            modelBuilder.Entity("Nilda.EntityFrameworkCore.Entities.City", b =>
                {
                    b.HasOne("Nilda.EntityFrameworkCore.Entities.CountryRegion", "CountryRegion")
                        .WithMany("Cities")
                        .HasForeignKey("CountryRegionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CountryRegion");
                });

            modelBuilder.Entity("Nilda.EntityFrameworkCore.Entities.CountryRegion", b =>
                {
                    b.HasOne("Nilda.EntityFrameworkCore.Entities.Country", "Country")
                        .WithMany("Regions")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");
                });

            modelBuilder.Entity("Nilda.EntityFrameworkCore.Entities.DistrictOrTown", b =>
                {
                    b.HasOne("Nilda.EntityFrameworkCore.Entities.City", "City")
                        .WithMany("DistrictOrTowns")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("City");
                });

            modelBuilder.Entity("Nilda.EntityFrameworkCore.Entities.City", b =>
                {
                    b.Navigation("DistrictOrTowns");
                });

            modelBuilder.Entity("Nilda.EntityFrameworkCore.Entities.Country", b =>
                {
                    b.Navigation("Regions");
                });

            modelBuilder.Entity("Nilda.EntityFrameworkCore.Entities.CountryRegion", b =>
                {
                    b.Navigation("Cities");
                });

            modelBuilder.Entity("Nilda.EntityFrameworkCore.Entities.DistrictOrTown", b =>
                {
                    b.Navigation("Barangays");
                });
#pragma warning restore 612, 618
        }
    }
}
